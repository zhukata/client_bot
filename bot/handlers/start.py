from aiogram import F, Bot, Router
from aiogram.types import Message
from aiogram.filters import CommandStart, Command
from aiogram.utils.keyboard import (
    InlineKeyboardBuilder, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)

from bot.logging_config import logger
from bot.database.catalog_db import get_client, create_client
from bot.config import CHANNEL_ID, GROUP_ID

router = Router()

start_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üõç –ö–∞—Ç–∞–ª–æ–≥")],
            [KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞"), KeyboardButton(text="‚ÑπÔ∏è FAQ")]
        ],
        resize_keyboard=True
    )


@router.message(Command('help'))
async def help_command(message: Message):
    await message.answer(
        """–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –≤–æ–π—Ç–∏\n
        /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    )


@router.message(CommandStart())
async def start_command(message: Message):
    user = await get_client(message.from_user.id)
    if not user:
        user = await create_client(message.from_user.id, message.from_user.username)
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.", reply_markup=start_keyboard)
    else:
        await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!", reply_markup=start_keyboard)


async def check_subscription(user_id: int, bot: Bot, channel_id: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª"""
    try:
        chat_member = await bot.get_chat_member(channel_id, user_id)
        return chat_member.status in ["member", "administrator", "creator"]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False  # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω


# @router.message(CommandStart())
# async def start_handler(message: Message, bot: Bot):
#     user = message.from_user

#     subscribed_channel = await check_subscription(user.id, bot, CHANNEL_ID)
#     subscribed_group = await check_subscription(user.id, bot, GROUP_ID)

#     if not subscribed_channel or not subscribed_group:
#         # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥–ø–∏—Å–∫–∏
#         keyboard = InlineKeyboardBuilder()
#         keyboard.button(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=f"https://t.me/{CHANNEL_ID}")
#         keyboard.button(text="–í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", url=f"https://t.me/{GROUP_ID}")
#         await message.answer(
#             "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –∏ –≥—Ä—É–ø–ø—É:",
#             reply_markup=keyboard.as_markup()
#         )
#         return
#     else:
#         # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
#         client = await get_client(user.id)
#         if not client:
#             try:
#                 await create_client(user.id, user.username)
#                 print(f"–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç {user.id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î")
#             except Exception as e:
#                 print(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞ {user.id} –≤ –ë–î : {e}")

#         await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω \n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é.")
