from aiogram import Router, F
from aiogram.types import Message, InlineQuery, InlineQueryResultArticle, InputTextMessageContent
from aiogram.filters import Command

from bot.logging_config import logger
from bot.config import BOT_USERNAME

router = Router()

# –°–ª–æ–≤–∞—Ä—å —Å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏
FAQ_DICT = {
    "–∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑": """
1. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
2. –ù–∞–∂–º–∏—Ç–µ "üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
4. –ù–∞–∂–º–∏—Ç–µ "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å"
5. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –æ–ø–ª–∞—Ç—ã
    """,
    
    "—Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã": """
–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:
üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
üè¶ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Å—á–µ—Ç
üíµ –ù–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑–µ
    """,
    
    "–¥–æ—Å—Ç–∞–≤–∫–∞": """
–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏:
üöö –ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
üè™ –°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
üì¶ –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏
    """,
    
    "–≤–æ–∑–≤—Ä–∞—Ç": """
–£—Å–ª–æ–≤–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞:
1. –¢–æ–≤–∞—Ä –Ω–µ –±—ã–ª –≤ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–∏
2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∞
3. –ï—Å—Ç—å —á–µ–∫
4. –ü—Ä–æ—à–ª–æ –Ω–µ –±–æ–ª–µ–µ 14 –¥–Ω–µ–π
    """,
    
    "–∫–æ–Ω—Ç–∞–∫—Ç—ã": """
–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX
üìß Email: support@example.com
üí¨ Telegram: @support
    """,
    
    "—Ä–∞–±–æ—Ç–∞": """
–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:
–ü–Ω-–ü—Ç: 9:00 - 18:00
–°–±: 10:00 - 16:00
–í—Å: –í—ã—Ö–æ–¥–Ω–æ–π
    """,
    
    "—Å–∫–∏–¥–∫–∏": """
–ù–∞—à–∏ —Å–∫–∏–¥–∫–∏:
üéÅ 5% –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–∫–∞–∑–µ
üéÅ 10% –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 5000‚ÇΩ
üéÅ 15% –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 10000‚ÇΩ
    """,
    
    "–≥–∞—Ä–∞–Ω—Ç–∏—è": """
–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ —Ç–æ–≤–∞—Ä—ã:
üì¶ 14 –¥–Ω–µ–π –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç
‚öñÔ∏è 1 –≥–æ–¥ –≥–∞—Ä–∞–Ω—Ç–∏–∏
üõ° –ó–∞—â–∏—Ç–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
    """
}


@router.message(Command("faq"))
@router.message(F.text == "‚ÑπÔ∏è FAQ")
async def faq_command(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /faq –∏ –∫–Ω–æ–ø–∫–∏ FAQ
    
    Args:
        message: –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    try:
        await message.answer(
            "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
            "1. –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?\n"
            "2. –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã\n"
            "3. –î–æ—Å—Ç–∞–≤–∫–∞\n"
            "4. –í–æ–∑–≤—Ä–∞—Ç\n"
            "5. –ö–æ–Ω—Ç–∞–∫—Ç—ã\n"
            "6. –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã\n"
            "7. –°–∫–∏–¥–∫–∏\n"
            "8. –ì–∞—Ä–∞–Ω—Ç–∏—è\n\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å:\n"
            f"1. –ù–∞–ø–∏—à–∏—Ç–µ @{BOT_USERNAME} –∏ –ø—Ä–æ–±–µ–ª\n"
            "2. –í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å\n"
            "3. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞"
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª FAQ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ FAQ: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.inline_query()
async def faq_inline_query(inline_query: InlineQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è FAQ
    
    Args:
        inline_query: –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å–∞
    """
    try:
        query = inline_query.query.lower().strip()
        results = []
        
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã
        if not query:
            for question, answer in FAQ_DICT.items():
                results.append(
                    InlineQueryResultArticle(
                        id=question,
                        title=question.capitalize(),
                        description="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ—Ç–≤–µ—Ç",
                        input_message_content=InputTextMessageContent(
                            message_text=f"‚ùì {question.capitalize()}\n\n{answer}"
                        )
                    )
                )
        else:
            # –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ FAQ
            for question, answer in FAQ_DICT.items():
                if query in question.lower():
                    results.append(
                        InlineQueryResultArticle(
                            id=question,
                            title=question.capitalize(),
                            description="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ—Ç–≤–µ—Ç",
                            input_message_content=InputTextMessageContent(
                                message_text=f"‚ùì {question.capitalize()}\n\n{answer}"
                            )
                        )
                    )
        
        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        if not results:
            results.append(
                InlineQueryResultArticle(
                    id="not_found",
                    title="–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω",
                    description="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–Ω–∞—á–µ",
                    input_message_content=InputTextMessageContent(
                        message_text=(
                            "‚ùì –ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã –Ω–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å.\n\n"
                            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–Ω–∞—á–µ "
                            "–∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
                        )
                    )
                )
            )
        
        await inline_query.answer(results=results, cache_time=1)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {inline_query.from_user.id} –∏—Å–∫–∞–ª: {query}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å–∞: {e}")
        await inline_query.answer(
            results=[],
            cache_time=1,
            error_message="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –æ—Ç–≤–µ—Ç–∞"
        )
